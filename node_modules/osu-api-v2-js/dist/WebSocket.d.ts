import { WebSocket as WebSocketType } from "ws";
import { API, Chat, User } from "./index.js";
/** Everything here is great to use with the WebSocket you can get with {@link API.generateWebSocket}! */
export declare namespace WebSocket {
    /**
     * Use any of those with `socket.send()` to send a command to the WebSocket!
     * @example `socket.send(osu.WebSocket.Command.chatStart)`
     */
    namespace Command {
        const chatStart: string;
        const chatEnd: string;
    }
    /** Those are what you'll get from WebSocket's `MessageEvent`s! */
    namespace Event {
        interface Error {
            error: string;
            event: undefined;
            data: undefined;
        }
        interface ChatChannelJoin {
            event: "chat.channel.join";
            data: Chat.Channel.WithDetails;
        }
        interface ChatChannelLeave {
            event: "chat.channel.part";
            data: Chat.Channel.WithDetails;
        }
        interface ChatMessageNew {
            event: "chat.message.new";
            data: {
                messages: Chat.Message[];
                users: User[];
            };
        }
        /** That's the type of `JSON.parse(m.toString())` where `m` is a WebSocket's `MessageEvent`! */
        type Any = Error | ChatChannelJoin | ChatChannelLeave | ChatMessageNew;
    }
    /**
     * Get a websocket to get WebSocket events from!
     * @param server The "notification websocket/server" URL (defaults to **wss://notify.ppy.sh**)
    */
    function generate(this: API, server?: string): WebSocketType;
}
